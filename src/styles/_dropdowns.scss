// Root dropdown - affects all instances
.dropdown {
  display: none;
  grid-auto-flow: row;
  border-radius: $magic-number;
  box-sizing: border-box;
  background: $color-background-white;
  box-shadow: $effect-dropdown-shadow-0-offset-x
      $effect-dropdown-shadow-0-offset-y + px $effect-dropdown-shadow-0-radius
      $effect-dropdown-shadow-0-spread $effect-dropdown-shadow-0-color,
    $effect-dropdown-shadow-1-offset-x $effect-dropdown-shadow-1-offset-y
      $effect-dropdown-shadow-1-radius $effect-dropdown-shadow-1-spread
      $effect-dropdown-shadow-1-color;
  min-width: $magic-number * 30;
  padding: $magic-number * 3;

  // Positioning
  position: absolute;
  top: calc(100% - #{$magic-number});
  left: 0;
  z-index: 6;

  @extend %animation-fade-in;

  // Hard left/right should only be on desktop. If on mobile act as though they're on the bottom.
  &[data-x-position='left'] {
    top: auto;
    left: 0;
    right: auto;
    bottom: calc(100% - #{$magic-number});
  }
  &[data-x-position='right'] {
    top: auto;
    left: auto;
    right: 0;
    bottom: calc(100% - #{$magic-number});
  }
  @media (min-width: $breakpoints-tablet) {
    &[data-x-position='left'] {
      top: auto;
      left: auto;
      right: calc(100% - #{$magic-number});
      bottom: auto;
    }
    &[data-x-position='right'] {
      top: auto;
      left: calc(100% - #{$magic-number});
      right: auto;
      bottom: auto;
    }
  }
  // Other positions work on all viewports
  &[data-y-position='top'] {
    top: auto;
    left: auto;
    right: auto;
    bottom: calc(100% - #{$magic-number});
  }
  &[data-y-position='bottom'] {
    top: calc(100% - #{$magic-number});
    left: auto;
    right: auto;
    bottom: auto;
  }
  &[data-x-position='left'][data-y-position='top'] {
    top: auto;
    left: 0;
    right: auto;
    bottom: calc(100% - #{$magic-number});
  }
  &[data-x-position='left'][data-y-position='bottom'] {
    top: calc(100% - #{$magic-number});
    left: 0;
    right: auto;
    bottom: auto;
  }
  &[data-x-position='right'][data-y-position='top'] {
    top: auto;
    left: auto;
    right: 0;
    bottom: calc(100% - #{$magic-number});
  }
  &[data-x-position='right'][data-y-position='bottom'] {
    top: calc(100% - #{$magic-number});
    left: auto;
    right: 0;
    bottom: auto;
  }
  // Dropdowns that only consist of list-buttons have no padding
  &.buttons {
    padding: 0;
    .list-button:first-child {
      border-top-left-radius: $magic-number;
      border-top-right-radius: $magic-number;
    }
    .list-button:last-child {
      border-bottom-left-radius: $magic-number;
      border-bottom-right-radius: $magic-number;
    }
  }
}
.dropdown-trigger {
  overflow: visible;
  position: relative;
  cursor: unset;
  &:hover .dropdown,
  &:focus-within .dropdown,
  .dropdown:hover {
    display: grid;
  }
}

.dropdown-trigger.queries-dropdown {
  /*
    Queries dropdown needs to be wide to allow cards on desktop
    This is hard to do with its relative positioning without JS to detect VW width and relative offset
    So let's make it the full viewport width
  */
  position: unset;
  .dropdown {
    max-width: calc(100vw - (#{$magic-number} * 4));
    right: $magic-number * 2;
    top: $magic-number * 6;
    .ellipsis {
      max-width: 50vw;
    }
  }
}

@media (min-width: $breakpoints-tablet) {
  .dropdown-trigger.queries-dropdown {
    position: unset;
    .dropdown {
      right: $magic-number * 6;
      max-width: calc(100vw - (#{$magic-number} * 12));
      .ellipsis {
        max-width: 25vw;
      }
    }
  }
  .dropdown {
    min-width: $magic-number * 30;
  }
}
